#!/usr/bin/env bash
set -euo pipefail

YP_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." >/dev/null && pwd)"
source ${YP_DIR}/sh/common.inc.sh
source ${YP_DIR}/sh/package-managers/apt.inc.sh

if [[ "${EUID}" != "0" ]]; then
    echo_info "EUID=${EUID}"
    [[ -n "${YP_SUDO}" ]] || {
        echo_info "YP_SUDO=${YP_SUDO}"
        echo_err "Restarting this shell script as root is impossible."
        exit 1
    }
    echo_warn "Restarting this shell script as root."
    exe ${YP_SUDO} --preserve-env --set-home ${BASH_SOURCE[0]}
    exit 0
fi

export DEBIAN_FRONTEND=noninteractive
export DEBCONF_NONINTERACTIVE_SEEN=true

# keep in sync with dockerfiles/yp-debian/Dockerfile.build.sh
echo_do "Setup aptitude..."
apt_update

# see https://github.com/microsoft/WSL/issues/8219#issuecomment-1110508016
! ${YP_DIR}/bin/is_wsl || {
    apt_install_one gzip
    echo -en '\x10' | sudo dd of=/usr/bin/gzip count=1 bs=1 conv=notrunc seek=$((0x189))
}
apt_install_one apt-transport-https
apt_install_one ca-certificates
apt_install_one software-properties-common
apt_install_one gnupg-agent

apt_install_one git
apt_install_one openssl
if [[ "${SEMAPHORE:-}" = "true" ]]; then
    # cannot skip the prompt about /etc/ssh/sshd_config even though
    # apt-get install sends dpkg option to choose to keep local version
    # ┌──────────────────────┤ Configuring openssh-server ├──────────────────────┐
    # │ /etc/ssh/sshd_config is available, but the version installed currently   │
    # │ has been locally modified.                                               │
    # │                                                                          │
    # │ What do you want to do about modified configuration file sshd_config?    │
    # │                                                                          │
    # │           install the package maintainer's version                       │
    # │           keep the local version currently installed                     │
    # │           show the differences between the versions                      │
    # │           show a side-by-side difference between the versions            │
    # │           show a 3-way difference between available versions             │
    # │           do a 3-way merge between available versions                    │
    # │           start a new shell to examine the situation                     │
    # │                                                                          │
    # │                                                                          │
    # │                                  <Ok>                                    │
    # │                                                                          │
    # └──────────────────────────────────────────────────────────────────────────┘
    echo_skip "aptitude: Installing ssh-client..."
elif [[ "${TRAVIS:-}" = "true" ]]; then
    # stalls after printing
    # Setting up openssh-server (1:8.2p1-4ubuntu0.3) ...
    # Installing new version of config file /etc/ssh/moduli ...
    # rescue-ssh.target is a disabled or a static unit, not starting it.
    echo_skip "aptitude: Installing ssh-client..."
else
    apt_install_one ssh-client
fi
apt_install_one openssl
apt_install_one sudo
echo_done

echo_do "Setup debconf-utils..."
apt_install_one debconf-utils
echo '* libraries/restart-without-asking boolean true' | debconf-set-selections
echo_done

echo_do "Setup locales..."
apt_install_one locales
locale-gen en_US en_US.UTF-8
dpkg-reconfigure locales
echo_done

if [[ "${CI:-}" = "true" ]]; then
    echo_do "Setup NTP to improve date-time sync..."
    (
        # see https://bugs.launchpad.net/ubuntu/+source/tzdata/+bug/1773687
        ln -sfn /usr/share/zoneinfo/UTC /etc/localtime
        apt_install_one tzdata
        dpkg-reconfigure tzdata

        if command -v timedatectl; then
            timedatectl set-ntp no || true
        fi
        apt_install_one ntp
        # test that ntpd is working
        ntpq -p
    ) || true
    echo_done
else
    echo_skip "Setup NTP to improve date-time sync..."
fi

# Basic
echo_do "aptitude: Installing basic packages..."
apt_install_one bsdmainutils
apt_install_one build-essential # as per homebrew-install
apt_install_one uuid-runtime
apt_install_one zlib1g-dev

apt_install_one bash
apt_install_one curl
apt_install_one file
apt_install_one python3-minimal
echo_done

# scripts tend to call /usr/bin/pyhon to intend calling python2 or python3, whichever is available
[[ -e /usr/bin/python ]] || ln -s /usr/bin/python3 /usr/bin/python

apt_list_installed
