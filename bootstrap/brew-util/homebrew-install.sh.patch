--- bootstrap/brew-util/homebrew-install.sh.original
+++ bootstrap/brew-util/homebrew-install.sh
@@ -130,7 +130,7 @@
   fi
   HOMEBREW_CACHE="${HOME}/Library/Caches/Homebrew"
 
-  STAT_PRINTF=("stat" "-f")
+  STAT_PRINTF=("/usr/bin/stat" "-f")
   PERMISSION_FORMAT="%A"
   CHOWN=("/usr/sbin/chown")
   CHGRP=("/usr/bin/chgrp")
@@ -145,7 +145,7 @@
   HOMEBREW_PREFIX_DEFAULT="/home/linuxbrew/.linuxbrew"
   HOMEBREW_CACHE="${HOME}/.cache/Homebrew"
 
-  STAT_PRINTF=("stat" "--printf")
+  STAT_PRINTF=("/bin/stat" "--printf")
   PERMISSION_FORMAT="%a"
   CHOWN=("/bin/chown")
   CHGRP=("/bin/chgrp")
@@ -369,6 +369,22 @@
   version_ge "$(major_minor "${git_version_output##* }")" "$(major_minor "${REQUIRED_GIT_VERSION}")"
 }
 
+test_degit() {
+  if [[ ! -x "$1" ]]
+  then
+    return 1
+  fi
+
+  local git_version_output
+  git_version_output="$("$1" --version 2>/dev/null)"
+  version_ge "$(major_minor "${git_version_output##* }")" "$(major_minor "2.26.0")"
+}
+# if [[ -n "${HOMEBREW_DEGIT:-}" ]] && ! test_degit git; then
+if [[ -n "${HOMEBREW_DEGIT:-}" ]] && ! grep -q "^git version 2\.\(\|2[6-9]\|[3-9][0-9]\)\."; then
+  ohai "Skipping HOMEBREW_DEGIT=${HOMEBREW_DEGIT} due to $(git --version)."
+  HOMEBREW_DEGIT=
+fi
+
 # Search for the given executable in PATH (avoids a dependency on the `which` command)
 which() {
   # Alias to Bash built-in command `type -P`
@@ -893,6 +909,12 @@
 (
   cd "${HOMEBREW_REPOSITORY}" >/dev/null || return
 
+  HOMEBREW_BREW_GIT_REF=${HOMEBREW_BREW_GIT_REF:-refs/remotes/origin/master}
+  if [[ -n "${HOMEBREW_DEGIT:-}" ]]; then
+    ohai "Using HOMEBREW_DEGIT=${HOMEBREW_DEGIT} for a quicker checkout."
+    execute "${HOMEBREW_DEGIT}" "--history" "${HOMEBREW_BREW_GIT_REMOTE}#${HOMEBREW_BREW_GIT_REF/refs\/remotes\/origin/refs\/heads}"
+  else
+
   # we do it in four steps to avoid merge errors when reinstalling
   execute "git" "init" "-q"
 
@@ -906,7 +928,9 @@
   execute "git" "fetch" "--force" "origin"
   execute "git" "fetch" "--force" "--tags" "origin"
 
-  execute "git" "reset" "--hard" "origin/master"
+  execute "git" "reset" "--hard" "${HOMEBREW_BREW_GIT_REF}"
+
+  fi
 
   if [[ "${HOMEBREW_REPOSITORY}" != "${HOMEBREW_PREFIX}" ]]
   then
@@ -934,19 +958,33 @@
       execute "${MKDIR[@]}" "${HOMEBREW_CORE}"
       cd "${HOMEBREW_CORE}" >/dev/null || return
 
+      HOMEBREW_CORE_GIT_REF=${HOMEBREW_CORE_GIT_REF:-refs/remotes/origin/master}
+      if [[ -n "${HOMEBREW_DEGIT:-}" ]]; then
+        ohai "Using HOMEBREW_DEGIT=${HOMEBREW_DEGIT} for a quicker checkout."
+        execute "${HOMEBREW_DEGIT}" "--history" "${HOMEBREW_CORE_GIT_REMOTE}#${HOMEBREW_CORE_GIT_REF/refs\/remotes\/origin/refs\/heads}"
+      else
+
       execute "git" "init" "-q"
       execute "git" "config" "remote.origin.url" "${HOMEBREW_CORE_GIT_REMOTE}"
       execute "git" "config" "remote.origin.fetch" "+refs/heads/*:refs/remotes/origin/*"
       execute "git" "config" "core.autocrlf" "false"
       execute "git" "fetch" "--force" "origin" "refs/heads/master:refs/remotes/origin/master"
       execute "git" "remote" "set-head" "origin" "--auto" >/dev/null
-      execute "git" "reset" "--hard" "origin/master"
+      execute "git" "reset" "--hard" "${HOMEBREW_CORE_GIT_REF}"
+
+      fi
 
       cd "${HOMEBREW_REPOSITORY}" >/dev/null || return
     ) || exit 1
   fi
 
+  if [[ -n "${HOMEBREW_DEGIT:-}" ]]; then
+    warn "Skipping 'brew update --force --quiet' when using degit."
+  else
+
   execute "${HOMEBREW_PREFIX}/bin/brew" "update" "--force" "--quiet"
+
+  fi
 ) || exit 1
 
 if [[ ":${PATH}:" != *":${HOMEBREW_PREFIX}/bin:"* ]]
