#!/usr/bin/env bash
set -euo pipefail

YP_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." >/dev/null && pwd)"
source ${YP_DIR}/sh/common.inc.sh

[[ "${EUID}" != "0" ]] || {
    echo_err "Cannot bootstrap as root, primarily because homebrew cannot be running as root."
    exit 1
}

if git log -1 --format="%B" | grep -q "\[debug bootstrap\]"; then
    echo_info "Detected '[debug bootstrap]' marker in git commit message."
    echo_info "Skipping bootstrap altogether."
    export YP_SKIP_SUDO_BOOTSTRAP=true
fi

[[ "${YP_SKIP_SUDO_BOOTSTRAP:-}" = "true" ]] || {
    BOOSTRAP_SUDO_SCRIPT=${YP_DIR}/bootstrap/bootstrap-sudo-${OS_SHORT}-${OS_RELEASE_ID}
    [[ -f "${BOOSTRAP_SUDO_SCRIPT}" ]] || \
        BOOSTRAP_SUDO_SCRIPT=${YP_DIR}/bootstrap/bootstrap-sudo-${OS_SHORT}
    ${BOOSTRAP_SUDO_SCRIPT}
    yp::env_force
}

source ${YP_DIR}/bootstrap/brew-util.inc.sh

if git log -1 --format="%B" | grep -q "\[debug bootstrap\]"; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    yp::env_force
    brew install tmate
    yp_ci_debug
fi

echo_do "Print state info pre-homebrew..."
brew_print
echo_done

[[ "${YP_SKIP_BREW_BOOTSTRAP:-}" = "true" ]] || \
    source ${YP_DIR}/bootstrap/brew-bootstrap.inc.sh

[[ "${CI:-}" != "true" ]] || {
    echo_do "Print state info pre-bootstrap..."
    brew_print
    echo_done

    source ${YP_DIR}/bootstrap/brew-install-ci.inc.sh
    hash -r
    source ${YP_DIR}/sh/common.inc.sh
}

source ${YP_DIR}/bootstrap/brew-bootstrap-brewfile.inc.sh

echo_do "Print state info post-bootstrap..."
brew_print
echo_done

# see https://github.com/Homebrew/brew/issues/5013
hash -r
