name: 'ysoftwareab/yplatform:github-composite-env'
description: 'Debug'
inputs:
  step:
    description: Step
    required: true
runs:
  using: composite
  steps:
    - name: composite1-inline
      shell: bash
      env:
        # GITHUB_ACTION_PATH: ${{ github.action_path }}
        # GITHUB_EVENT_NAME: ${{ github.event_name }}
        # FIXME https://github.com/actions/runner/issues/665
        STEP: ${{ inputs.step }}
      run: |
        echo composite1-inline
        echo "--- CURRENT --- printenv"
        printenv | grep "^STEP" | sort || true

        echo "--- NEXT --- $GITHUB_ENV"
        echo "STEP_${STEP}_COMPOSITE_1=true" >> $GITHUB_ENV
        echo "STEP_${STEP}_COMPOSITE=1" >> $GITHUB_ENV
        echo "STEP_COMPOSITE=${STEP}1" >> $GITHUB_ENV
        echo "STEP_1=${STEP}" >> $GITHUB_ENV
        cat $GITHUB_ENV

    - name: composite2-inline
      shell: bash
      env:
        # GITHUB_ACTION_PATH: ${{ github.action_path }}
        # GITHUB_EVENT_NAME: ${{ github.event_name }}
        # FIXME https://github.com/actions/runner/issues/665
        STEP: ${{ inputs.step }}
      run: |
        echo composite2-inline
        echo "--- CURRENT --- printenv"
        printenv | grep "^STEP" | sort || true

        echo "--- NEXT --- $GITHUB_ENV"
        echo "STEP_${STEP}_COMPOSITE_2=true" >> $GITHUB_ENV
        echo "STEP_${STEP}_COMPOSITE=2" >> $GITHUB_ENV
        echo "STEP_COMPOSITE=${STEP}2" >> $GITHUB_ENV
        echo "STEP_2=${STEP}" >> $GITHUB_ENV
        cat $GITHUB_ENV

    - name: check_partial_inline
      env:
        # GITHUB_ACTION_PATH: ${{ github.action_path }}
        # GITHUB_EVENT_NAME: ${{ github.event_name }}
        # FIXME https://github.com/actions/runner/issues/665
        STEP: ${{ inputs.step }}
      shell: bash
      run: |
        echo check_partial_inline
        echo "--- CURRENT --- printenv"
        printenv | grep "^STEP" | sort || true

        echo "--- CURRENT --- $GITHUB_ENV"
        cat $GITHUB_ENV

        exec 2>&1
        set -x

        RESULT=0
        VAR="STEP_${STEP}_COMPOSITE_1"
        test "${!VAR}" = "true" || RESULT=$((RESULT+1))
        VAR="STEP_${STEP}_COMPOSITE_2"
        test "${!VAR}" = "true" || RESULT=$((RESULT+1))
        VAR="STEP_${STEP}_COMPOSITE"
        test "${!VAR}" = "4" || RESULT=$((RESULT+1))

        VAR="STEP_COMPOSITE"
        test "${!VAR}" = "${STEP}2" || RESULT=$((RESULT+1))

        VAR="STEP_1"
        test "${!VAR}" = "${STEP}" || RESULT=$((RESULT+1))
        VAR="STEP_2"
        test "${!VAR}" = "${STEP}" || RESULT=$((RESULT+1))

        exit $RESULT

    - name: composite3-actioncomposite
      env:
        # GITHUB_ACTION_PATH: ${{ github.action_path }}
        # GITHUB_EVENT_NAME: ${{ github.event_name }}
        # FIXME https://github.com/actions/runner/issues/665
        STEP: ${{ inputs.step }}
      uses: ysoftwareab/yplatform/.github/actions/run@master
      with:
        shell: bash
        run: |
          echo composite3-actioncomposite
          echo "--- CURRENT --- printenv"
          printenv | grep "^STEP" | sort || true

          echo "--- NEXT --- $GITHUB_ENV"
          echo "STEP_${STEP}_COMPOSITE_3=true" >> $GITHUB_ENV
          echo "STEP_${STEP}_COMPOSITE=3" >> $GITHUB_ENV
          echo "STEP_COMPOSITE=${STEP}3" >> $GITHUB_ENV
          echo "STEP_3=${STEP}" >> $GITHUB_ENV
          cat $GITHUB_ENV

    - name: composite4-actioncomposite
      env:
        # GITHUB_ACTION_PATH: ${{ github.action_path }}
        # GITHUB_EVENT_NAME: ${{ github.event_name }}
        # FIXME https://github.com/actions/runner/issues/665
        STEP: ${{ inputs.step }}
      uses: ysoftwareab/yplatform/.github/actions/run@master
      with:
        shell: bash
        run: |
          echo composite4-actioncomposite
          echo "--- CURRENT --- printenv"
          printenv | grep "^STEP" | sort || true

          echo "--- NEXT --- $GITHUB_ENV"
          echo "STEP_${STEP}_COMPOSITE_4=true" >> $GITHUB_ENV
          echo "STEP_${STEP}_COMPOSITE=4" >> $GITHUB_ENV
          echo "STEP_COMPOSITE=${STEP}4" >> $GITHUB_ENV
          echo "STEP_4=${STEP}" >> $GITHUB_ENV
          cat $GITHUB_ENV

    - name: check_partial_actioncomposite
      env:
        # GITHUB_ACTION_PATH: ${{ github.action_path }}
        # GITHUB_EVENT_NAME: ${{ github.event_name }}
        # FIXME https://github.com/actions/runner/issues/665
        STEP: ${{ inputs.step }}
      shell: bash
      run: |
        echo check_partial_actioncomposite
        echo "--- CURRENT --- printenv"
        printenv | grep "^STEP" | sort || true

        echo "--- CURRENT --- $GITHUB_ENV"
        cat $GITHUB_ENV

        exec 2>&1
        set -x

        RESULT=0
        VAR="STEP_${STEP}_COMPOSITE_1"
        test "${!VAR}" = "true" || RESULT=$((RESULT+1))
        VAR="STEP_${STEP}_COMPOSITE_2"
        test "${!VAR}" = "true" || RESULT=$((RESULT+1))
        VAR="STEP_${STEP}_COMPOSITE_3"
        test "${!VAR}" = "true" || RESULT=$((RESULT+1))
        VAR="STEP_${STEP}_COMPOSITE_4"
        test "${!VAR}" = "true" || RESULT=$((RESULT+1))
        VAR="STEP_${STEP}_COMPOSITE"
        test "${!VAR}" = "4" || RESULT=$((RESULT+1))

        VAR="STEP_COMPOSITE"
        test "${!VAR}" = "${STEP}4" || RESULT=$((RESULT+1))

        VAR="STEP_1"
        test "${!VAR}" = "${STEP}" || RESULT=$((RESULT+1))
        VAR="STEP_2"
        test "${!VAR}" = "${STEP}" || RESULT=$((RESULT+1))
        VAR="STEP_3"
        test "${!VAR}" = "${STEP}" || RESULT=$((RESULT+1))
        VAR="STEP_4"
        test "${!VAR}" = "${STEP}" || RESULT=$((RESULT+1))

        exit $RESULT

    - name: composite5-actionnode
      env:
        # GITHUB_ACTION_PATH: ${{ github.action_path }}
        # GITHUB_EVENT_NAME: ${{ github.event_name }}
        # FIXME https://github.com/actions/runner/issues/665
        STEP: ${{ inputs.step }}
      uses: actions/github-script@v6
      with:
        script: |
          console.log("composite5-actionnode");
          console.log("--- CURRENT --- process.env");
          let stepKeys = Object.keys(process.env).filter( (key) => /^STEP/.test(key) );
          stepKeys.forEach( (key) => console.log(`${key}=${process.env[key]}`) );

          console.log("--- NEXT --- process.env.GITHUB_ENV");
          let fs = require('fs');
          fs.appendFileSync(process.env.GITHUB_ENV, `STEP_${process.env.STEP}_COMPOSITE_5=true\n`);
          fs.appendFileSync(process.env.GITHUB_ENV, `STEP_${process.env.STEP}_COMPOSITE=5\n`);
          fs.appendFileSync(process.env.GITHUB_ENV, `STEP_COMPOSITE=${process.env.STEP}5\n`);
          fs.appendFileSync(process.env.GITHUB_ENV, `STEP_5=${process.env.STEP}\n`);
          console.log(fs.readFileSync(process.env.GITHUB_ENV, 'utf8'));

    - name: composite6-actionnode
      env:
        # GITHUB_ACTION_PATH: ${{ github.action_path }}
        # GITHUB_EVENT_NAME: ${{ github.event_name }}
        # FIXME https://github.com/actions/runner/issues/665
        STEP: ${{ inputs.step }}
      uses: actions/github-script@v6
      with:
        script: |
          console.log("composite6-actionnode");
          console.log("--- CURRENT --- process.env");
          let stepKeys = Object.keys(process.env).filter( (key) => /^STEP/.test(key) );
          stepKeys.forEach( (key) => console.log(`${key}=${process.env[key]}`) );

          console.log("--- NEXT --- process.env.GITHUB_ENV");
          let fs = require('fs');
          fs.appendFileSync(process.env.GITHUB_ENV, `STEP_${process.env.STEP}_COMPOSITE_6=true\n`);
          fs.appendFileSync(process.env.GITHUB_ENV, `STEP_${process.env.STEP}_COMPOSITE=6\n`);
          fs.appendFileSync(process.env.GITHUB_ENV, `STEP_COMPOSITE=${process.env.STEP}6\n`);
          fs.appendFileSync(process.env.GITHUB_ENV, `STEP_6=${process.env.STEP}\n`);
          console.log(fs.readFileSync(process.env.GITHUB_ENV, 'utf8'));

    - name: check
      if: always()
      env:
        # GITHUB_ACTION_PATH: ${{ github.action_path }}
        # GITHUB_EVENT_NAME: ${{ github.event_name }}
        # FIXME https://github.com/actions/runner/issues/665
        STEP: ${{ inputs.step }}
      shell: bash
      run: |
        echo check
        echo "--- CURRENT --- printenv"
        printenv | grep "^STEP" | sort || true

        echo "--- CURRENT --- $GITHUB_ENV"
        cat $GITHUB_ENV

        exec 2>&1
        set -x

        RESULT=0
        VAR="STEP_${STEP}_COMPOSITE_1"
        test "${!VAR}" = "true" || RESULT=$((RESULT+1))
        VAR="STEP_${STEP}_COMPOSITE_2"
        test "${!VAR}" = "true" || RESULT=$((RESULT+1))
        VAR="STEP_${STEP}_COMPOSITE_3"
        test "${!VAR}" = "true" || RESULT=$((RESULT+1))
        VAR="STEP_${STEP}_COMPOSITE_4"
        test "${!VAR}" = "true" || RESULT=$((RESULT+1))
        VAR="STEP_${STEP}_COMPOSITE_5"
        test "${!VAR}" = "true" || RESULT=$((RESULT+1))
        VAR="STEP_${STEP}_COMPOSITE_6"
        test "${!VAR}" = "true" || RESULT=$((RESULT+1))

        VAR="STEP_${STEP}_COMPOSITE"
        test "${!VAR}" = "6" || RESULT=$((RESULT+1))

        VAR="STEP_1"
        test "${!VAR}" = "${STEP}" || RESULT=$((RESULT+1))
        VAR="STEP_2"
        test "${!VAR}" = "${STEP}" || RESULT=$((RESULT+1))
        VAR="STEP_3"
        test "${!VAR}" = "${STEP}" || RESULT=$((RESULT+1))
        VAR="STEP_4"
        test "${!VAR}" = "${STEP}" || RESULT=$((RESULT+1))
        VAR="STEP_5"
        test "${!VAR}" = "${STEP}" || RESULT=$((RESULT+1))
        VAR="STEP_6"
        test "${!VAR}" = "${STEP}" || RESULT=$((RESULT+1))

        VAR="STEP_COMPOSITE"
        test "${!VAR}" = "${STEP}6" || RESULT=$((RESULT+1))

        exit $RESULT
